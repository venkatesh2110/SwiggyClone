{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/logincomponent/logincomponent.component.ts","./src/app/logincomponent/logincomponent.component.html","./src/app/restuarant/restuarant.component.ts","./src/app/restuarant/restuarant.component.html","./src/app/signupcomponent/signupcomponent.component.ts","./src/app/signupcomponent/signupcomponent.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RestuarantComponent } from './restuarant/restuarant.component';\nimport { HomepageComponent } from './homepage/homepage.component';\n\nconst routes: Routes = [\n  {path: '', component: HomepageComponent},\n  {path: 'restuarants', component: RestuarantComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponents = [RestuarantComponent];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'SwiggyClone';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomepageComponent } from './homepage/homepage.component';\n\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatButtonModule} from '@angular/material/button';\n\nimport {MatSidenavModule} from '@angular/material/sidenav';\n\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { LogincomponentComponent } from './logincomponent/logincomponent.component';\nimport { SignupcomponentComponent } from './signupcomponent/signupcomponent.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomepageComponent,\n    LogincomponentComponent,\n    SignupcomponentComponent,\n    routingComponents\n  ],\n  entryComponents: [LogincomponentComponent,\n    SignupcomponentComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatGridListModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatInputModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { LogincomponentComponent } from '../logincomponent/logincomponent.component';\nimport { SignupcomponentComponent } from '../signupcomponent/signupcomponent.component';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit { \n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  openLogindialog(): void{\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '50%';\n    this.dialog.open(LogincomponentComponent, dialogConfig);\n  }\n\n  openSignupdialog(): void{\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = '50%';\n    this.dialog.open(SignupcomponentComponent, dialogConfig);\n  }\n}\n","<div class=\"row\" style=\"height:100%; margin: 0px !important;\">\n    <div class=\"col-lg-6 loginSide\">\n        <img src=\"/assets/Images/Swiggylogo.jpg\" alt=\"SwiggyImage\" id=\"swiggyLogo\">\n        <div class=\"row loginSignupButtons\">\n            <button mat-button id=\"loginButton\" (click)='openLogindialog()'>Login</button>\n            <button mat-button id=\"signupButton\"(click)='openSignupdialog()'>SignUp</button>  \n                    \n        </div>\n        <div class=\"row androidApplestores\">\n            <a mat-button href=\"https://play.google.com/store/apps/details?id=in.swiggy.android\" target=\"_blank\"\n                id=\"andriodStore\"><i class=\"fa fa-play iconPadding\" aria-hidden=\"true\"></i>Get It On <br> Google\n                Play</a>\n            <a mat-button href=\"https://apps.apple.com/in/app/swiggy-food-order-delivery/id989540920\" id=\"appleStore\"\n                target=\"_blank\"><i class=\"fa fa-apple iconPadding\" aria-hidden=\"true\"></i> Download\n                on the <br> App Store</a>\n        </div>\n    </div>\n    <div class=\"col-lg-6\" >\n        <div class=\"imageSide\">\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SignupcomponentComponent } from '../signupcomponent/signupcomponent.component';\nimport {FormBuilder, FormGroup, Validators, FormControl, ReactiveFormsModule} from '@angular/forms';\nimport { RouterLink, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logincomponent',\n  templateUrl: './logincomponent.component.html',\n  styleUrls: ['./logincomponent.component.css']\n})\nexport class LogincomponentComponent implements OnInit {\n  loginForm: FormGroup;\n  public redirectingTo;\n  constructor(public dialog: MatDialog, private formBuilder: FormBuilder, private route: Router) {\n    this.loginForm = this.formBuilder.group({\n      mailId: ['', [Validators.required, Validators.email]],\n      password : ['' , [Validators.required, Validators.pattern('^.{8,15}$')]]\n    });\n   }\n  ngOnInit(): void {\n  }\n  openSignupdialog(): void {\n    this.dialog.open(SignupcomponentComponent, {width: '50%'});\n  }\n\n  redirectTorestuarantPage() {\n    if (this.loginForm.valid) {\n     this.route.navigate(['/', 'restuarants']);\n     this.dialog.closeAll();\n    }\n  }\n\n  get loginDetails() {\n    return this.loginForm.controls;\n    \n  }\n}\n","<mat-dialog-actions style=\"float: right;\"><button mat-button mat-dialog-close>X</button></mat-dialog-actions>\n<h2 mat-dialog-title>LOGIN</h2>\n\n<mat-dialog-content>\n    <div class=\"loginItems\">\n        <div style=\"display:flex\">\n            <div>\n                \n                <p><b>Don't have an account?</b> <a mat-button mat-dialog-close id=\"createAccBtn\" (click)='openSignupdialog()'>Cretae an account</a></p>\n\n            </div>\n            <div >\n                <img src=\"assets/Images/ghee-roast.jpg\" width=\"30%\" alt=\"Food\" id=\"dosaImage\">                \n            </div>\n        </div>  \n        <div class=\"inputField\">\n            \n        </div>\n        <form [formGroup]= 'loginForm'>\n            <div class=\"row \">\n                \n                <mat-form-field class=\"col-sm-4 loginEmailId\">\n                    <mat-label>Email</mat-label>\n                    <input matInput type=\"email\" required  placeholder=\"Enter Email Address\" formControlName='mailId'>\n                    <mat-error *ngIf=\"loginDetails.mailId.errors?.required && loginDetails.mailId.touched \" style=\"color: red;\">This Field is Required</mat-error>\n                    <mat-error *ngIf=\"loginDetails.mailId.errors?.email && loginDetails.mailId.touched\" style=\"color: red;\">Enter Valid Email Id</mat-error>\n                </mat-form-field>\n                \n            </div>\n            <div class=\"row\">\n                <mat-form-field class=\"col-sm-4 loginPassword\">\n                    <mat-label>Password</mat-label>\n                    <input matInput type=\"password\" placeholder=\"Enter Password\" formControlName = 'password' required>\n                    <mat-error *ngIf=\"loginDetails.password.errors?.required && loginDetails.password.touched\"style=\"color: red;\">This Field is Required</mat-error>\n                    <mat-error *ngIf=\"loginDetails.password.errors?.pattern && loginDetails.password.touched\"style=\"color: red;\">Enter Valid Password</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"row\">\n                <button class=\"col-sm-4\" type=\"submit\"(click)='redirectTorestuarantPage()'  mat-raised-button id=\"loginButton\">LOGIN</button>\n            </div>\n        </form>\n    </div>\n</mat-dialog-content>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-restuarant',\n  templateUrl: './restuarant.component.html',\n  styleUrls: ['./restuarant.component.css']\n})\nexport class RestuarantComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>restuarant works!</p>\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { LogincomponentComponent } from '../logincomponent/logincomponent.component';\nimport { FormBuilder, FormGroup, Validators, FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-signupcomponent',\n  templateUrl: './signupcomponent.component.html',\n  styleUrls: ['./signupcomponent.component.css']\n})\nexport class SignupcomponentComponent implements OnInit {\n  signupForm: FormGroup;\n  public signupDialogClose = false;\n  constructor(public dialog: MatDialog, private formBuilder: FormBuilder, private snackbar: MatSnackBar) {\n    this.signupForm = this.formBuilder.group({\n      phoneNumber: [null, [Validators.required, Validators.pattern('[0-9]{10}')]],\n      name: ['', [Validators.required, Validators.pattern('[A-Za-z0-9_@./#&+-]{1,150}')]],\n      emailId: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern('^.{8,15}$')]]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n  openLogindialog() {\n    this.dialog.open(LogincomponentComponent, {width: '50%'});\n  }\n  get signupDetails() {\n    return this.signupForm.controls;\n  }\n\n  openSignupSnackbar(message) {\n    if (this.signupForm.valid) {\n      const snackbarRef = this.snackbar.open(message, null, {duration: 2000});\n      this.dialog.closeAll();\n      this.dialog.open(LogincomponentComponent, {width: '50%'});\n    }\n  }\n}","<mat-dialog-actions style=\"float:right !important\"><button mat-button mat-dialog-close >X</button></mat-dialog-actions>\n<h2 mat-dialog-title>SIGN UP </h2>\n<mat-dialog-content>\n    <div class=\"signupItems\">\n        <div style=\"display:flex\">\n            <div>\n                <p><b>Already have an account?</b> <a mat-button id=\"logintoAccBtn\" mat-dialog-close (click)='openLogindialog()'>Log In to our account</a></p>\n            </div>\n            <div>\n                <img src=\"assets/Images/ghee-roast.jpg\" width=\"30%\" alt=\"Food\" id=\"dosaImage\">\n            </div>\n        </div>\n        <form [formGroup]='signupForm'>\n            <div class=\"row\">\n                <mat-form-field class=\"col-sm-4 signUpNumber\">\n                    <mat-label>Phone Number</mat-label>\n                    <input matInput type=\"tel\" placeholder=\"Enter Phone Number\" formControlName='phoneNumber' required>\n                    <mat-error *ngIf=\"signupDetails.phoneNumber.errors?.required && signupDetails.phoneNumber.touched \" style=\"color: red;\">This Field is Required</mat-error>\n                    <mat-error *ngIf=\"signupDetails.phoneNumber.errors?.pattern && signupDetails.phoneNumber.touched\" style=\"color: red;\">Enter Valid Phone Number</mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"row\">\n                <mat-form-field class=\"col-sm-4 signUpName\">\n                    <mat-label>Name</mat-label>\n                    <input matInput type=\"text\" placeholder=\"Enter Name\" formControlName='name' required>\n                    <mat-error *ngIf=\"signupDetails.name.errors?.required && signupDetails.name.touched \" style=\"color: red;\">This Field is Required</mat-error>\n                    <mat-error *ngIf=\"signupDetails.name.errors?.pattern && signupDetails.name.touched\" style=\"color: red;\">Enter Valid Format</mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"row\">\n                <mat-form-field class=\"col-sm-4 signUpEmailId\">\n                    <mat-label>Email</mat-label>\n                    <input matInput type=\"email\" placeholder=\"Enter Email Address\" formControlName='emailId'required>\n                    <mat-error *ngIf=\"signupDetails.emailId.errors?.required && signupDetails.emailId.touched \" style=\"color: red;\">This Field is Required</mat-error>\n                    <mat-error *ngIf=\"signupDetails.emailId.errors?.email && signupDetails.emailId.touched\" style=\"color: red;\">Enter Valid Email Id</mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"row\">\n                <mat-form-field class=\"col-sm-4 signUpPassword\">\n                    <mat-label>Password</mat-label>\n                    <input matInput type=\"password\" placeholder=\"Enter Password\" formControlName='password'required>\n                    <mat-error *ngIf=\"signupDetails.password.errors?.required && signupDetails.password.touched \" style=\"color: red;\">This Field is Required</mat-error>\n                    <mat-error *ngIf=\"signupDetails.password.errors?.pattern && signupDetails.password.touched\" style=\"color: red;\">There Should be 8 to 15 characters</mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"row\">\n                <button class=\"col-sm-4\" mat-raised-button id=\"signUpButton\"   (click)='openSignupSnackbar(\"SignUp Successfull\")'>SIGN UP</button>\n            </div>  \n        </form>      \n    </div>\n</mat-dialog-content>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}